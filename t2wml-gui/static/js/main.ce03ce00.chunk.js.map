{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","cookies","Cookies","userID","get","undefined","uuidToHex","uuid4","set","path","maxAge","console","log","window","server","localStorage","getItem","setItem","state","showSettings","_this2","react_default","a","createElement","className","Navbar","bg","variant","sticky","style","height","Brand","cursor","title","Text","verticalAlign","Button","size","padding","onClick","handleShowSettings","bind","Modal","show","onHide","Header","background","Title","Body","Form","Group","as","Row","controlId","marginTop","Label","column","sm","md","Col","Control","type","defaultValue","readOnly","onChange","event","setState","target","value","Footer","handleCloseSettings","handleSaveSettings","index_esm","split","defaultSize","minSize","maxSize","App_TableViewer","App_YAMLEditor","App_Output","React","Component","TableViewer","_this3","assertThisInitialized","filename","excelData","showSheetSelector","sheetNames","currSheetName","columnDefs","headerName","field","pinned","width","rowData","^","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","AA","AB","AC","AD","AE","AF","AG","AH","AI","AJ","AK","AL","AM","AN","AO","AP","AQ","AR","AS","AT","AU","AV","AW","AX","AY","AZ","handleOpenFile","_this4","file","files","name","uploadExcelURL","formData","FormData","append","fetch","body","credentials","method","then","response","ok","Error","statusText","json","text","JSON","parse","keys","currSheetData","catch","error","params","gridApi","api","gridColumnApi","columnApi","Card","OverlayTrigger","placement","trigger","overlay","Tooltip","id","document","getElementById","click","accept","display","overflow","main","onGridReady","rowDataChangeDetectionStrategy","defaultColDef","minWidth","editable","lockPosition","resizable","sortable","cellClass","colDef","cellStyle","col","data","styles","onCellClicked","handleCellClick","suppressKeyboardEvent","headerHeight","rowHeight","rowStyle","whiteSpace","hidden","renderSheetSelector","_this5","sheetSelectorDiv","i","len","length","push","key","borderColor","margin","handleSheetSelect","color","_this6","sheetName","innerHTML","removeHighlightJSON","Output","removeBorders","clearOutput","downloadDisabled","colName","String","rowName","rowIndex","url","valueCol","valueRow","json2state","row","rowData2","setRowData","override","arguments","assign","cols","rowCount","colName1","rowName1","colName2","rowName2","colIdx1","colName2colIdx","colIdx2","row1","row2","colIdx","colIdx2colName","dict","presets","styleNames","styleNameCount","styleName","cells","cellCount","j","_cells$j$match","match","_cells$j$match2","slicedToArray","updateStyleByDict","data_region","backgroundColor","qualifier_region","item","highlightJSON","YAMLEditor","_this7","textYAML","jsonYAML","isValidYAML","errMsg","errStack","handleChange","handleApply","_this8","reader","FileReader","readAsText","onloadend","result","yaml","safeLoad","err","message","stack","refs","monaco","editor","getModel","getValue","uploadYamlURL","applyHighlightJSON","alert","lib_default","ref","language","theme","options","automaticLayout","lineNumbersMinChars","renderLineHighlight","renderWhitespace","scrollbar","horizontalScrollbarSize","horizontalSliderSize","verticalScrollbarSize","verticalSliderSize","showFoldingControls","editorDidMount","updateOptions","tabSize","fontSize","disabled","_this9","cache","showDownload","downloadFileName","downloadFileType","currCol","currRow","updateStyleByCell","border","itemCol","itemRow","qualifiers","itemID","itemName","propertyID","total","division","Math","floor","random","str","parseInt","substring","queryWikidata","_json$statement$item_","_json$statement$item_2","propertyName","temp","qualifier","test","_temp$i$cell_index$ma","_temp$i$cell_index$ma2","hue","getHueByString","node","_this10","index","subfield","_this11","outputDiv","propertyDiv","itemIDDiv","href","rel","valueDiv","qualifiersDiv","qualifierPropertyDiv","qualifierPropertyID","qualifierPropertyName","qualifierValueDiv","qualifierValueID","qualifierValueName","fontWeight","borderCollapse","borderTop","borderBottom","Fragment","handleShowDownload","handleCloseDownload","handleStartDownload","downloadAPI","Downloader","indexOf","rest","dividend","abs","fromCharCode","Boolean","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+fA0CMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,IAGN,IAAMQ,EAAU,IAAIC,IAChBC,EAASF,EAAQG,IAAI,eAEVC,IAAXF,GACFA,EAASG,IAAUC,OACnBN,EAAQO,IAAI,SAAUL,EAAQ,CAC5BM,KAAM,IACNC,OAAS,QAEXC,QAAQC,IAAI,2BACZD,QAAQC,IAAI,uBAAyBT,IAErCQ,QAAQC,IAAI,uBAAyBT,GAEvCU,OAAOV,OAASA,EAChBQ,QAAQC,IAAI,yBAA2BC,OAAOV,OAAQ,sBAGtD,IAAIW,EAASD,OAAOE,aAAaC,QAAQ,UAtBxB,OAuBH,MAAVF,IACFA,EAAS,yBACTD,OAAOE,aAAaE,QAAQ,SAAUH,IAIxCD,OAAOC,OAASA,EAChBpB,EAAKwB,MAAQ,CACXC,cAAc,EACdL,OAAQA,GAhCOpB,wEAuCV,IAAA0B,EAAAvB,KACP,OACEwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAGbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQD,UAAU,SAASE,GAAG,OAAOC,QAAQ,OAAOC,OAAO,MAAMC,MAAO,CAAEC,OAAQ,SAEhFT,EAAAC,EAAAC,cAACE,EAAA,EAAOM,MAAR,CACEP,UAAU,wBACVK,MAAO,CAAEG,OAAQ,QACjBC,MAAM,sCAHR,gBAgBAZ,EAAAC,EAAAC,cAACE,EAAA,EAAOS,KAAR,CAAaV,UAAU,QAAvB,kBAGAH,EAAAC,EAAAC,cAACE,EAAA,EAAOS,KAAR,CAAaV,UAAU,eAAeK,MAAO,CAAEM,cAAe,WAG5Dd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEZ,UAAU,6BACVG,QAAQ,gBACRU,KAAK,KACLR,MAAO,CAAES,QAAS,eAClBC,QAAS1C,KAAK2C,mBAAmBC,KAAK5C,OALxC,eAaNwB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOC,KAAM9C,KAAKqB,MAAMC,aAAckB,KAAK,KAAKO,OAAQ,cACtDvB,EAAAC,EAAAC,cAACmB,EAAA,EAAMG,OAAP,CAAchB,MAAO,CAAEiB,WAAY,eACjCzB,EAAAC,EAAAC,cAACmB,EAAA,EAAMK,MAAP,kBAEF1B,EAAAC,EAAAC,cAACmB,EAAA,EAAMM,KAAP,KACE3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAMzB,UAAU,aACdH,EAAAC,EAAAC,cAAC0B,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKC,UAAU,iBAAiBxB,MAAO,CAAEyB,UAAW,SAClEjC,EAAAC,EAAAC,cAAC0B,EAAA,EAAKM,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAKC,GAAG,IAAIlC,UAAU,cAA5C,cACAH,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKF,GAAG,KAAKC,GAAG,MACdrC,EAAAC,EAAAC,cAAC0B,EAAA,EAAKW,QAAN,CAAcC,KAAK,OAAOC,aAAcjD,OAAOV,OAAQ4D,UAAQ,MAGnE1C,EAAAC,EAAAC,cAAC0B,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKC,UAAU,iBAAiBW,SAAU,SAACC,GAAD,OAAW7C,EAAK8C,SAAS,CAAEpD,OAAQmD,EAAME,OAAOC,UACxG/C,EAAAC,EAAAC,cAAC0B,EAAA,EAAKM,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAKC,GAAG,IAAIlC,UAAU,cAA5C,UACAH,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAKF,GAAG,KAAKC,GAAG,MACdrC,EAAAC,EAAAC,cAAC0B,EAAA,EAAKW,QAAN,CAAcC,KAAK,MAAMC,aAAcjD,OAAOC,aAKtDO,EAAAC,EAAAC,cAACmB,EAAA,EAAM2B,OAAP,CAAcxC,MAAO,CAAEiB,WAAY,eACjCzB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAQT,QAAQ,eAAeY,QAAS1C,KAAKyE,oBAAoB7B,KAAK5C,OAAtE,UAGAwB,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAQT,QAAQ,OAAOY,QAAS1C,KAAK0E,mBAAmB9B,KAAK5C,OAA7D,UAOJwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAGbH,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAWhD,UAAU,MAAMiD,MAAM,WAAWC,YAAY,MAAMC,QAAS,IAAKC,SAAU,IAAK/C,MAAO,CAAEC,OAAQ,qBAAsBgB,WAAY,YAC5IzB,EAAAC,EAAAC,cAACsD,EAAD,MACAxD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAWhD,UAAU,GAAGiD,MAAM,aAAaC,YAAY,MAAMC,QAAS,IAAKC,SAAU,KACnFvD,EAAAC,EAAAC,cAACuD,EAAD,MACAzD,EAAAC,EAAAC,cAACwD,EAAD,uDA0BVlF,KAAKqE,SAAS,CAAE/C,cAAc,kDAI9BtB,KAAKqE,SAAS,CAAE/C,cAAc,+CAGb8C,GACjBtD,QAAQC,IAAI,0BACZC,OAAOC,OAASjB,KAAKqB,MAAMJ,OAC3BD,OAAOE,aAAaE,QAAQ,SAAUpB,KAAKqB,MAAMJ,QACjDjB,KAAKqE,SAAS,CAAE/C,cAAc,WA9JhB6D,IAAMC,WAgNlBC,cACJ,SAAAA,EAAYzF,GAAO,IAAA0F,EAAA,OAAAxF,OAAAC,EAAA,EAAAD,CAAAE,KAAAqF,GACjBC,EAAAxF,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuF,GAAAlF,KAAAH,KAAMJ,IACNoB,OAAOqE,YAAPvF,OAAAyF,EAAA,EAAAzF,CAAAwF,GACAA,EAAKjE,MAAQ,CACXmE,SAAU,KACVC,UAAW,KACXC,mBAAmB,EACnBC,WAAY,KACZC,cAAe,KACfC,WAAY,CAAC,CAAEC,WAAc,GAAIC,MAAS,IAAKC,OAAU,OAAQC,MAAS,IAAM,CAAEH,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,IAAKC,MAAS,KAAO,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,MAAQ,CAAED,WAAc,KAAMC,MAAS,OAChgEG,QAAS,CAAC,CAAEC,IAAK,IAAKC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,IAAKC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,IAAKC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,IAAKC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,IAAKC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,IAAKC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,IAAKC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,IAAKC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,IAAKC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IAAM,CAAEpD,IAAK,KAAMC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,EAAK,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,GAAIC,GAAM,IA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","file":"static/js/main.ce03ce00.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n// App\nimport SplitPane from 'react-split-pane'\nimport { Navbar, Card, Button, OverlayTrigger, Tooltip, Modal, Form, Row, Col } from 'react-bootstrap';\nimport uuid4 from 'uuid/v4'\nimport uuidToHex from 'uuid-to-hex'\nimport Cookies from 'universal-cookie';\n// Table\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham.css';\n// YAML\nimport MonacoEditor from 'react-monaco-editor';\nimport yaml from 'js-yaml';\n// Output\nimport Downloader from 'js-file-download'\n\n// http://patorjk.com/software/taag/#p=display&f=Doh&t=App\n//                AAA                                                      \n//               A:::A                                                     \n//              A:::::A                                                    \n//             A:::::::A                                                   \n//            A:::::::::A          ppppp   ppppppppp   ppppp   ppppppppp   \n//           A:::::A:::::A         p::::ppp:::::::::p  p::::ppp:::::::::p  \n//          A:::::A A:::::A        p:::::::::::::::::p p:::::::::::::::::p \n//         A:::::A   A:::::A       pp::::::ppppp::::::ppp::::::ppppp::::::p\n//        A:::::A     A:::::A       p:::::p     p:::::p p:::::p     p:::::p\n//       A:::::AAAAAAAAA:::::A      p:::::p     p:::::p p:::::p     p:::::p\n//      A:::::::::::::::::::::A     p:::::p     p:::::p p:::::p     p:::::p\n//     A:::::AAAAAAAAAAAAA:::::A    p:::::p    p::::::p p:::::p    p::::::p\n//    A:::::A             A:::::A   p:::::ppppp:::::::p p:::::ppppp:::::::p\n//   A:::::A               A:::::A  p::::::::::::::::p  p::::::::::::::::p \n//  A:::::A                 A:::::A p::::::::::::::pp   p::::::::::::::pp  \n// AAAAAAA                   AAAAAAAp::::::pppppppp     p::::::pppppppp    \n//                                  p:::::p             p:::::p            \n//                                  p:::::p             p:::::p            \n//                                 p:::::::p           p:::::::p           \n//                                 p:::::::p           p:::::::p           \n//                                 p:::::::p           p:::::::p           \n//                                 ppppppppp           ppppppppp      \n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // set cookie of user id\n    const cookies = new Cookies();\n    let userID = cookies.get(\"userID\");\n    // if no user id, generate one\n    if (userID === undefined) {\n      userID = uuidToHex(uuid4());\n      cookies.set('userID', userID, {\n        path: '/',\n        maxAge: (60 * 60 * 24) // one day\n      });\n      console.log(\"<App> detected new user\")\n      console.log(\"<App> assigned uid: \" + userID)\n    } else {\n      console.log(\"<App> detected uid: \" + userID)\n    }\n    window.userID = userID;\n    console.log(\"<App> logged in as: %c\" + window.userID, \"background: yellow\");\n\n    // access local storage\n    let server = window.localStorage.getItem(\"server\");\n    if (server == null) {\n      server = \"http://localhost:5000/\";\n      window.localStorage.setItem(\"server\", server);\n    }\n\n    // init this app\n    window.server = server;\n    this.state = {\n      showSettings: false,\n      server: server,\n    };\n\n    // prevent leave/reload page\n    // window.onbeforeunload = () => { return true; };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        {/* Header */}\n        <div className=\"Header\">\n          <Navbar className=\"shadow\" bg=\"dark\" variant=\"dark\" sticky=\"top\" style={{ height: \"50px\" }}>\n            {/* logo 1 */}\n            <Navbar.Brand\n              className=\"pl-2 font-weight-bold\"\n              style={{ cursor: \"help\" }}\n              title=\"Table to Wikidata Mapping Language\"\n            >T2WML&nbsp;GUI</Navbar.Brand>\n\n            {/* logo 2 */}\n            {/* <Navbar.Brand className=\"pl-2\">\n              <span className=\"font-weight-bold\">T</span>able&nbsp;\n              <span className=\"font-weight-bold\">2</span>&nbsp;\n              <span className=\"font-weight-bold\">W</span>ikidata&nbsp;\n              <span className=\"font-weight-bold\">M</span>apping&nbsp;\n              <span className=\"font-weight-bold\">L</span>anguage&nbsp;\n              <span className=\"font-weight-bold\">GUI</span>\n            </Navbar.Brand> */}\n\n            <Navbar.Text className=\"pr-2\">v1.1&nbsp;(beta)</Navbar.Text>\n\n            {/* top right of page */}\n            <Navbar.Text className=\"pr-2 ml-auto\" style={{ verticalAlign: \"center\" }}>\n              {/* <span className=\"font-weight-bold\">User ID:&nbsp;</span>\n              <span className=\"pr-2\">{window.userID}</span> */}\n              <Button\n                className=\"d-inline-block float-right\"\n                variant=\"outline-light\"\n                size=\"sm\"\n                style={{ padding: \"0rem 0.5rem\" }}\n                onClick={this.handleShowSettings.bind(this)}\n              >Settings</Button>\n            </Navbar.Text>\n\n          </Navbar>\n        </div>\n\n        {/* Settings */}\n        <Modal show={this.state.showSettings} size=\"lg\" onHide={() => { }}>\n          <Modal.Header style={{ background: \"whitesmoke\" }}>\n            <Modal.Title>Settings</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form className=\"container\">\n              <Form.Group as={Row} controlId=\"settingsUserID\" style={{ marginTop: \"1rem\" }}>\n                <Form.Label column sm=\"12\" md=\"2\" className=\"text-right\">User&nbsp;ID</Form.Label>\n                <Col sm=\"12\" md=\"10\">\n                  <Form.Control type=\"text\" defaultValue={window.userID} readOnly />\n                </Col>\n              </Form.Group>\n              <Form.Group as={Row} controlId=\"settingsServer\" onChange={(event) => this.setState({ server: event.target.value })}>\n                <Form.Label column sm=\"12\" md=\"2\" className=\"text-right\">Server</Form.Label>\n                <Col sm=\"12\" md=\"10\">\n                  <Form.Control type=\"url\" defaultValue={window.server} />\n                </Col>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer style={{ background: \"whitesmoke\" }}>\n            <Button variant=\"outline-dark\" onClick={this.handleCloseSettings.bind(this)}>\n              Cancel\n            </Button>\n            <Button variant=\"dark\" onClick={this.handleSaveSettings.bind(this)}>\n              Save\n            </Button>\n          </Modal.Footer>\n        </Modal>\n\n        {/* Content */}\n        <div className=\"Content\">\n\n          {/* original */}\n          <SplitPane className=\"p-3\" split=\"vertical\" defaultSize=\"60%\" minSize={200} maxSize={-300} style={{ height: \"calc(100vh - 50px)\", background: \"#f8f9fa\" }}>\n            <TableViewer />\n            <SplitPane className=\"\" split=\"horizontal\" defaultSize=\"60%\" minSize={200} maxSize={-200}>\n              <YAMLEditor />\n              <Output />\n            </SplitPane>\n          </SplitPane>\n\n          {/* for paper purpose only */}\n          {/* <SplitPane className=\"p-3\" split=\"vertical\" defaultSize=\"60%\" minSize={200} maxSize={-300} style={{ height: \"calc(100vh - 50px)\", background: \"#f8f9fa\" }}>\n            <SplitPane className=\"\" split=\"horizontal\" defaultSize=\"60%\" minSize={100} maxSize={-200}>\n              <TableViewer />\n              <Output />\n            </SplitPane>\n            <YAMLEditor />\n          </SplitPane> */}\n\n          {/* colorization \n          window.TableViewer.updateStyleByRegion(\"A\", \"5\", \"A\", \"7\", {\"background-color\":\"hsl(20,100%,80%)\"});\n          window.TableViewer.updateStyleByRegion(\"B\", \"5\", \"B\", \"7\", {\"background-color\":\"hsl(200,100%,80%)\"});\n          window.TableViewer.updateStyleByRegion(\"C\", \"3\", \"H\", \"4\", {\"background-color\":\"hsl(200,100%,80%)\"});\n          window.TableViewer.updateStyleByRegion(\"C\", \"5\", \"H\", \"7\", {\"background-color\":\"hsl(150,50%,80%)\"});\n          */}\n\n        </div>\n      </div >\n    );\n  }\n\n  handleShowSettings() {\n    this.setState({ showSettings: true });\n  }\n\n  handleCloseSettings() {\n    this.setState({ showSettings: false });\n  }\n\n  handleSaveSettings(event) {\n    console.log(\"<App> updated settings\");\n    window.server = this.state.server;\n    window.localStorage.setItem(\"server\", this.state.server);\n    this.setState({ showSettings: false });\n  }\n}\n\n//                                       bbbbbbbb                                        \n// TTTTTTTTTTTTTTTTTTTTTTT               b::::::b            lllllll                     \n// T:::::::::::::::::::::T               b::::::b            l:::::l                     \n// T:::::::::::::::::::::T               b::::::b            l:::::l                     \n// T:::::TT:::::::TT:::::T                b:::::b            l:::::l                     \n// TTTTTT  T:::::T  TTTTTTaaaaaaaaaaaaa   b:::::bbbbbbbbb     l::::l     eeeeeeeeeeee    \n//         T:::::T        a::::::::::::a  b::::::::::::::bb   l::::l   ee::::::::::::ee  \n//         T:::::T        aaaaaaaaa:::::a b::::::::::::::::b  l::::l  e::::::eeeee:::::ee\n//         T:::::T                 a::::a b:::::bbbbb:::::::b l::::l e::::::e     e:::::e\n//         T:::::T          aaaaaaa:::::a b:::::b    b::::::b l::::l e:::::::eeeee::::::e\n//         T:::::T        aa::::::::::::a b:::::b     b:::::b l::::l e:::::::::::::::::e \n//         T:::::T       a::::aaaa::::::a b:::::b     b:::::b l::::l e::::::eeeeeeeeeee  \n//         T:::::T      a::::a    a:::::a b:::::b     b:::::b l::::l e:::::::e           \n//       TT:::::::TT    a::::a    a:::::a b:::::bbbbbb::::::bl::::::le::::::::e          \n//       T:::::::::T    a:::::aaaa::::::a b::::::::::::::::b l::::::l e::::::::eeeeeeee  \n//       T:::::::::T     a::::::::::aa:::ab:::::::::::::::b  l::::::l  ee:::::::::::::e  \n//       TTTTTTTTTTT      aaaaaaaaaa  aaaabbbbbbbbbbbbbbbb   llllllll    eeeeeeeeeeeeee  \n\n// class CustomCellRenderer extends React.Component {\n//   render() {\n//     let value = String(this.props.value);\n//     // advanced display\n//     if (value && value.charAt(0) && /^\\[.+\\]\\(.+\\)$/.test(value)) { // test charAt(0) first, to improve performance\n//       // HYPERLINK in format \"[link-text](link-href)\"\n//       let linkText = value.match(/(?<=\\[).+(?=\\])/)[0]; // extract link text\n//       let linkHref = value.match(/(?<=\\().+(?=\\))/)[0]; // extract link reference\n//       return ( // return a hyperlink\n//         <span>\n//           <a\n//             title={linkText}\n//             href={linkHref}\n//             target=\"_blank\"\n//             rel=\"noopener noreferrer\"\n//             style={{ \"color\": \"hsl(200, 100%, 30%)\", \"textDecoration\": \"underline\" }}\n//           >{linkText}</a>\n//         </span>\n//       );\n//     } else {\n//       // OTHERS\n//       return ( // return normal text\n//         <span title={value}>{value}</span>\n//       );\n//     }\n//   }\n// }\n\nclass TableViewer extends React.Component {\n  constructor(props) {\n    super(props);\n    window.TableViewer = this;\n    this.state = {\n      filename: null,\n      excelData: null,\n      showSheetSelector: false,\n      sheetNames: null,\n      currSheetName: null,\n      columnDefs: [{ \"headerName\": \"\", \"field\": \"^\", \"pinned\": \"left\", \"width\": 40 }, { \"headerName\": \"A\", \"field\": \"A\" }, { \"headerName\": \"B\", \"field\": \"B\" }, { \"headerName\": \"C\", \"field\": \"C\" }, { \"headerName\": \"D\", \"field\": \"D\" }, { \"headerName\": \"E\", \"field\": \"E\" }, { \"headerName\": \"F\", \"field\": \"F\" }, { \"headerName\": \"G\", \"field\": \"G\" }, { \"headerName\": \"H\", \"field\": \"H\" }, { \"headerName\": \"I\", \"field\": \"I\" }, { \"headerName\": \"J\", \"field\": \"J\" }, { \"headerName\": \"K\", \"field\": \"K\" }, { \"headerName\": \"L\", \"field\": \"L\" }, { \"headerName\": \"M\", \"field\": \"M\" }, { \"headerName\": \"N\", \"field\": \"N\" }, { \"headerName\": \"O\", \"field\": \"O\" }, { \"headerName\": \"P\", \"field\": \"P\" }, { \"headerName\": \"Q\", \"field\": \"Q\" }, { \"headerName\": \"R\", \"field\": \"R\" }, { \"headerName\": \"S\", \"field\": \"S\" }, { \"headerName\": \"T\", \"field\": \"T\" }, { \"headerName\": \"U\", \"field\": \"U\" }, { \"headerName\": \"V\", \"field\": \"V\" }, { \"headerName\": \"W\", \"field\": \"W\" }, { \"headerName\": \"X\", \"field\": \"X\" }, { \"headerName\": \"Y\", \"field\": \"Y\" }, { \"headerName\": \"Z\", \"field\": \"Z\" }, { \"headerName\": \"AA\", \"field\": \"AA\" }, { \"headerName\": \"AB\", \"field\": \"AB\" }, { \"headerName\": \"AC\", \"field\": \"AC\" }, { \"headerName\": \"AD\", \"field\": \"AD\" }, { \"headerName\": \"AE\", \"field\": \"AE\" }, { \"headerName\": \"AF\", \"field\": \"AF\" }, { \"headerName\": \"AG\", \"field\": \"AG\" }, { \"headerName\": \"AH\", \"field\": \"AH\" }, { \"headerName\": \"AI\", \"field\": \"AI\" }, { \"headerName\": \"AJ\", \"field\": \"AJ\" }, { \"headerName\": \"AK\", \"field\": \"AK\" }, { \"headerName\": \"AL\", \"field\": \"AL\" }, { \"headerName\": \"AM\", \"field\": \"AM\" }, { \"headerName\": \"AN\", \"field\": \"AN\" }, { \"headerName\": \"AO\", \"field\": \"AO\" }, { \"headerName\": \"AP\", \"field\": \"AP\" }, { \"headerName\": \"AQ\", \"field\": \"AQ\" }, { \"headerName\": \"AR\", \"field\": \"AR\" }, { \"headerName\": \"AS\", \"field\": \"AS\" }, { \"headerName\": \"AT\", \"field\": \"AT\" }, { \"headerName\": \"AU\", \"field\": \"AU\" }, { \"headerName\": \"AV\", \"field\": \"AV\" }, { \"headerName\": \"AW\", \"field\": \"AW\" }, { \"headerName\": \"AX\", \"field\": \"AX\" }, { \"headerName\": \"AY\", \"field\": \"AY\" }, { \"headerName\": \"AZ\", \"field\": \"AZ\" }],\n      rowData: [{ \"^\": \"1\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"2\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"3\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"4\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"5\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"6\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"7\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"8\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"9\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"10\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"11\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"12\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"13\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"14\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"15\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"16\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"17\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"18\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"19\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"20\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"21\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"22\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"23\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"24\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"25\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"26\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"27\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"28\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"29\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"30\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"31\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"32\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"33\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"34\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"35\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"36\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"37\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"38\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"39\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"40\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"41\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"42\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"43\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"44\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"45\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"46\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"47\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"48\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"49\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"50\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"51\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"52\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"53\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"54\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"55\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"56\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"57\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"58\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"59\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"60\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"61\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"62\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"63\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"64\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"65\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"66\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"67\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"68\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"69\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"70\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"71\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"72\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"73\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"74\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"75\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"76\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"77\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"78\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"79\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"80\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"81\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"82\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"83\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"84\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"85\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"86\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"87\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"88\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"89\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"90\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"91\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"92\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"93\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"94\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"95\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"96\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"97\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"98\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"99\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }, { \"^\": \"100\", \"A\": \"\", \"B\": \"\", \"C\": \"\", \"D\": \"\", \"E\": \"\", \"F\": \"\", \"G\": \"\", \"H\": \"\", \"I\": \"\", \"J\": \"\", \"K\": \"\", \"L\": \"\", \"M\": \"\", \"N\": \"\", \"O\": \"\", \"P\": \"\", \"Q\": \"\", \"R\": \"\", \"S\": \"\", \"T\": \"\", \"U\": \"\", \"V\": \"\", \"W\": \"\", \"X\": \"\", \"Y\": \"\", \"Z\": \"\", \"AA\": \"\", \"AB\": \"\", \"AC\": \"\", \"AD\": \"\", \"AE\": \"\", \"AF\": \"\", \"AG\": \"\", \"AH\": \"\", \"AI\": \"\", \"AJ\": \"\", \"AK\": \"\", \"AL\": \"\", \"AM\": \"\", \"AN\": \"\", \"AO\": \"\", \"AP\": \"\", \"AQ\": \"\", \"AR\": \"\", \"AS\": \"\", \"AT\": \"\", \"AU\": \"\", \"AV\": \"\", \"AW\": \"\", \"AX\": \"\", \"AY\": \"\", \"AZ\": \"\" }],\n    };\n    this.handleOpenFile = this.handleOpenFile.bind(this);\n  }\n\n  handleOpenFile(event) {\n    const file = event.target.files[0];\n    if (!file) return;\n    console.log(\"<TableViewer> opened file: \" + file.name);\n\n    // upload local excel, and fetch remote json\n    const uploadExcelURL = window.server + \"upload_excel?id=\" + window.userID;\n\n    let formData = new FormData();\n    formData.append(\"file\", file);\n\n    fetch(uploadExcelURL, {\n      body: formData,\n      credentials: \"same-origin\",\n      // credentials: \"include\",\n      method: \"POST\"\n    }).then((response) => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    }).then((response) => {\n      return response.json();\n    }).then((text) => {\n      console.log(\"<TableViewer> fetched remote file: %cupload_excel.json\", \"background: yellow\");\n      // console.log(text);\n      let json = JSON.parse(text);\n      console.log(json);\n\n      // test if it's csv\n      if (json[\"sheetNames\"] === undefined || json[\"sheetNames\"] === null) {\n        // if csv files\n        json[\"columnDefs\"][0][\"pinned\"] = \"left\";  // set first col pinned at left\n        json[\"columnDefs\"][0][\"width\"] = 40;       // set first col 40px width (max 5 digits, e.g. \"12345\")\n        this.setState({\n          filename: file.name,\n          columnDefs: json.columnDefs,\n          rowData: json.rowData,\n          excelData: null,\n          showSheetSelector: false,\n          sheetNames: null,\n          currSheetName: null\n        });\n      } else {\n        // if excel files\n        const currSheetName = Object.keys(json[\"sheetData\"])[0];\n        const currSheetData = json[\"sheetData\"][currSheetName];\n        currSheetData[\"columnDefs\"][0][\"pinned\"] = \"left\";  // set first col pinned at left\n        currSheetData[\"columnDefs\"][0][\"width\"] = 40;       // set first col 40px width (max 5 digits, e.g. \"12345\")\n        let excelData = this.state.excelData;\n        if (excelData === null) excelData = {};\n        excelData[currSheetName] = currSheetData;\n        this.setState({\n          filename: file.name,\n          excelData: excelData,\n          showSheetSelector: true,\n          sheetNames: json[\"sheetNames\"],\n          currSheetName: currSheetName,\n          columnDefs: currSheetData.columnDefs,\n          rowData: currSheetData.rowData\n        });\n      }\n\n      // this.gridColumnApi.autoSizeAllColumns();\n    }).catch((error) => {\n      // console.log(error);\n    });\n\n    // upload local json\n    // let reader = new FileReader();\n    // reader.readAsText(file);\n    // reader.onloadend = () => {\n    //   const text = reader.result;\n    //   let json = JSON.parse(text);\n    //   json.columnDefs[0][\"pinned\"] = \"left\";  // set first col pinned at left\n    //   json.columnDefs[0][\"width\"] = 40;       // set first col 40px width (max 5 digits, e.g. \"12345\")\n    //   this.setState({\n    //     filename: file.name,\n    //     columnDefs: json.columnDefs,\n    //     rowData: json.rowData\n    //   });\n    //   // this.gridColumnApi.autoSizeAllColumns();\n    // }\n  }\n\n  onGridReady(params) {\n    //store the api\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    console.log(\"<TableViewer> inited <ag-grid> and retrieved its API\");\n  }\n\n  render() {\n    return (\n      <div className=\"w-100 h-100 p-1\">\n        <Card className=\"w-100 h-100 shadow-sm\">\n\n          {/* Title of Table-Viewer */}\n          <Card.Header style={{ height: \"40px\", padding: \"0.5rem 1rem\", background: \"#339966\" }}>\n            <div\n              className=\"text-white font-weight-bold d-inline-block text-truncate\"\n              style={{ width: \"calc(100% - 60px)\" }}\n            >{(this.state.filename) ? this.state.filename + \" [Read-Only]\" : \"Table Viewer\"}</div>\n            <OverlayTrigger\n              placement=\"bottom\"\n              trigger=\"hover\"\n              // defaultShow=\"true\"\n              overlay={\n                <Tooltip id=\"tooltip-open-table\" style={{ width: \"fit-content\" }}>\n                  <div className=\"text-left small\">\n                    <b>Accepted file types:</b>\n                    {/* <br />• JavaScript Object Notation (.json) */}\n                    <br />• Comma-Separated Values (.csv)\n                    <br />• Microsoft Excel (.xls/.xlsx)\n                  </div>\n                </Tooltip>\n              }\n            >\n              <Button\n                className=\"d-inline-block float-right\"\n                variant=\"outline-light\"\n                size=\"sm\"\n                style={{ padding: \"0rem 0.5rem\" }}\n                onClick={function () {\n                  // Call the hidden file input tag\n                  document.getElementById(\"file_table\").click();\n                }}\n              >Open</Button>\n            </OverlayTrigger>\n            <input\n              type=\"file\"\n              id=\"file_table\"\n              accept=\".csv, .xls, .xlsx\"\n              style={{ display: \"none\" }}\n              onChange={this.handleOpenFile}\n              onClick={(event) => { event.target.value = null }}\n            />\n          </Card.Header>\n\n          {/* Content of Table Viewer */}\n          <Card.Body id=\"Table-Viewer\" className=\"ag-theme-balham w-100 h-100 p-0\" style={{ overflow: \"scroll\" }}>\n            {/* TODO: Adapt large dataset by: https://github.com/NeXTs/Clusterize.js */}\n            <AgGridReact\n              onGridReady={this.onGridReady.bind(this)}\n              columnDefs={this.state.columnDefs}\n              rowData={this.state.rowData}\n              rowDataChangeDetectionStrategy=\"IdentityCheck\"\n              defaultColDef={{\n                // All options: https://www.ag-grid.com/javascript-grid-column-properties/\n\n                // width\n                width: 70,\n                minWidth: 40,\n                // maxWidth: 200,\n\n                // others\n                editable: false,\n                lockPosition: true,\n                resizable: true,\n                // rowBuffer: 100,\n                sortable: false,\n                // suppressMaxRenderedRowRestriction: true, // 500 rows\n\n                // color\n                cellClass: function (params) {\n                  if (params.colDef.field === \"^\") {\n                    return [\"cell\", \"cell-header\"];\n                  } else {\n                    return \"cell\";\n                  }\n                },\n                cellStyle: function (params) {\n                  let col = params.colDef.field;\n                  // let row = params.node.rowIndex;\n                  if (params.data.styles && params.data.styles[col]) {\n                    return params.data.styles[col];\n                  }\n                },\n\n                // on cell clicked\n                onCellClicked: this.handleCellClick,\n\n                // stop keyboard event\n                suppressKeyboardEvent: function (params) { return true; },\n\n                // custom cell renderer (to support hyperlink, ...), significantly degrade performance!\n                // TODO: only use custom cell renderer when backend requires\n                // cellRendererFramework: CustomCellRenderer\n              }}\n              headerHeight={18}\n              rowHeight={18}\n              rowStyle={{ background: \"white\" }}\n            >\n            </AgGridReact>\n          </Card.Body>\n\n          {/* sheet selector */}\n          <Card.Footer\n            id=\"sheetSelector\"\n            style={{\n              height: \"50px\",\n              padding: \"0.5rem 0.75rem\",\n              background: \"whitesmoke\",\n              overflow: \"scroll hidden\",\n              whiteSpace: \"nowrap\"\n            }}\n            hidden={this.state.showSheetSelector ? false : true}\n          >\n            {this.renderSheetSelector()}\n          </Card.Footer>\n        </Card>\n      </div>\n    );\n  }\n\n  renderSheetSelector() {\n    const sheetNames = this.state.sheetNames;\n    if (sheetNames === undefined || sheetNames === null) return;\n    const currSheetName = this.state.currSheetName;\n\n    let sheetSelectorDiv = [];\n    for (let i = 0, len = sheetNames.length; i < len; i++) {\n      if (sheetNames[i] === currSheetName) {\n        sheetSelectorDiv.push(\n          <Button\n            key={i}\n            size=\"sm\"\n            style={{ borderColor: \"#339966\", background: \"#339966\", padding: \"0rem 0.5rem\", margin: \"0rem 0.25rem\" }}\n            onClick={(event) => { this.handleSheetSelect(event) }}\n          >{sheetNames[i]}</Button>\n        );\n      } else {\n        sheetSelectorDiv.push(\n          <Button\n            key={i}\n            size=\"sm\"\n            style={{ borderColor: \"#339966\", background: \"whitesmoke\", color: \"#339966\", padding: \"0rem 0.5rem\", margin: \"0rem 0.25rem\" }}\n            onClick={(event) => { this.handleSheetSelect(event) }}\n          >{sheetNames[i]}</Button>\n        );\n      }\n    }\n    return sheetSelectorDiv;\n  }\n\n  handleSheetSelect(event) {\n    const sheetName = event.target.innerHTML;\n    console.log(\"<TableViewer> selected sheet: %c\" + sheetName, \"background: yellow\");\n\n    // clear previous result\n    window.TableViewer.removeHighlightJSON();\n    window.Output.removeBorders();\n    window.Output.clearOutput();\n    window.Output.setState({ downloadDisabled: true });\n\n    // switch sheet\n    this.setState({\n      currSheetName: sheetName\n    });\n\n    // check if this sheet already be downloaded\n    const currSheetData = this.state.excelData[sheetName];\n    if (currSheetData !== undefined && currSheetData !== null) {\n      // it's in cache\n      this.setState({\n        columnDefs: currSheetData.columnDefs,\n        rowData: currSheetData.rowData\n      });\n    } else {\n      // no, a request is needed\n      const uploadExcelURL = window.server + \"upload_excel?id=\" + window.userID + \"&sheet_name=\" + sheetName;\n      fetch(uploadExcelURL, {\n        credentials: \"same-origin\",\n        // credentials: \"include\",\n        method: \"POST\"\n      }).then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        return response;\n      }).then((response) => {\n        return response.json();\n      }).then((text) => {\n        console.log(\"<TableViewer> fetched remote file: %cupload_excel.json\", \"background: yellow\");\n        // console.log(text);\n        let json = JSON.parse(text);\n        console.log(json);\n        json[\"columnDefs\"][0][\"pinned\"] = \"left\";\n        json[\"columnDefs\"][0][\"width\"] = 40;\n        // append to excel data\n        let excelData = this.state.excelData;\n        excelData[sheetName] = json;\n        // update\n        this.setState({\n          excelData: excelData,\n          columnDefs: json.columnDefs,\n          rowData: json.rowData\n        });\n        // this.gridColumnApi.autoSizeAllColumns();\n      }).catch((error) => {\n        // console.log(error);\n      });\n    }\n  }\n\n  handleCellClick(params) {\n    // const value = String(params.value);\n    const colName = String(params.colDef[\"headerName\"]);\n    const rowName = String(params.rowIndex + 1);\n    console.log(\"<TableViewer> clicked cell: %c\" + colName + rowName, \"background: yellow\");\n\n    // remove previous results\n    window.Output.removeBorders();\n    window.Output.clearOutput();\n\n    // start a new query\n    const url = window.server + \"resolve_cell?id=\" + window.userID + \"&col=\" + colName + \"&row=\" + rowName;\n    fetch(url, {\n      credentials: \"same-origin\",\n      // credentials: \"include\",\n      method: \"POST\"\n    }).then((response) => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    }).then((response) => {\n      return response.json();\n    }).then((json) => {\n      console.log(\"<TableViewer> fetched remote file: %cresolve_cell.json\", \"background: yellow\");\n      console.log(json);\n      window.Output.setState({\n        valueCol: colName,\n        valueRow: rowName\n      });\n      window.Output.json2state(colName, rowName, json);\n    }).catch((error) => {\n      // console.log(error);\n    });\n  }\n\n  updateValueByCell(colName, rowName, value) {\n    const col = colName;\n    const row = rowName - 1;\n    let rowData2 = this.state.rowData;\n    if (rowData2 !== undefined && rowData2[row] !== undefined) {\n      rowData2[row][col] = value;\n      this.setState({\n        rowData: rowData2\n      });\n      this.gridApi.setRowData(rowData2);\n      // console.log(\"<TableViewer> updated value of (\" + colName + rowName + \") by \\\"\" + value + \"\\\".\");\n    } else {\n      // console.log(\"<TableViewer> updated nothing.\");\n    }\n  }\n\n  updateStyleByCell(colName, rowName, style, override = false) {\n    const col = colName;\n    const row = rowName - 1;\n    let rowData2 = this.state.rowData;\n    if (rowData2 !== undefined && rowData2[row] !== undefined) {\n      if (rowData2[row][\"styles\"] === undefined) {\n        rowData2[row][\"styles\"] = {};\n      }\n      if (override) {\n        rowData2[row][\"styles\"][col] = style;\n      } else {\n        rowData2[row][\"styles\"][col] = Object.assign({}, rowData2[row][\"styles\"][col], style); // combine old and new styles\n      }\n      this.setState({\n        rowData: rowData2\n      });\n      this.gridApi.setRowData(rowData2);\n      // console.log(\"<TableViewer> updated style of (\" + colName + rowName + \") by \" + JSON.stringify(style) + \".\");\n    } else {\n      // console.log(\"<TableViewer> updated nothing.\");\n    }\n  }\n\n  updateStyleByRow(rowName, style, override = false) {\n    const row = rowName - 1;\n    let rowData2 = this.state.rowData;\n    if (rowData2 && rowData2[row]) {\n      if (rowData2[row][\"styles\"] === undefined) {\n        rowData2[row][\"styles\"] = {};\n      }\n      let cols = Object.keys(rowData2[row]); // get all col keys\n      for (let i in cols) {\n        let col = cols[i];\n        if (col !== \"^\" && col !== \"styles\") {\n          if (override) {\n            rowData2[row][\"styles\"][col] = style;\n          } else {\n            rowData2[row][\"styles\"][col] = Object.assign({}, rowData2[row][\"styles\"][col], style); // combine old and new styles\n          }\n        }\n      }\n      this.setState({\n        rowData: rowData2\n      });\n      this.gridApi.setRowData(rowData2);\n      // console.log(\"<TableViewer> updated style of row (\" + rowName + \") by \" + JSON.stringify(style) + \".\");\n    } else {\n      // console.log(\"<TableViewer> updated nothing.\");\n    }\n  }\n\n  updateStyleByCol(colName, style, override = false) {\n    const col = colName;\n    let rowData2 = this.state.rowData;\n    if (rowData2) {\n      let rowCount = rowData2.length;\n      for (let row = 0; row < rowCount; row++) {\n        if (rowData2[row][\"styles\"] === undefined) {\n          rowData2[row][\"styles\"] = {};\n        }\n        if (override) {\n          rowData2[row][\"styles\"][col] = style;\n        } else {\n          rowData2[row][\"styles\"][col] = Object.assign({}, rowData2[row][\"styles\"][col], style); // combine old and new styles\n        }\n      }\n      this.setState({\n        rowData: rowData2\n      });\n      this.gridApi.setRowData(rowData2);\n      // console.log(\"<TableViewer> updated style of col (\" + colName + \") by \" + JSON.stringify(style) + \".\");\n    } else {\n      // console.log(\"<TableViewer> updated nothing.\");\n    }\n  }\n\n  updateStyleByRegion(colName1, rowName1, colName2, rowName2, style, override = false) {\n    const colIdx1 = colName2colIdx(colName1), colIdx2 = colName2colIdx(colName2);\n    const row1 = rowName1 - 1, row2 = rowName2 - 1;\n    // if start > end, return\n    if (colIdx1 > colIdx2 || row1 > row2) {\n      // console.log(\"<TableViewer> had invalid input in updateStyleByRegion().\");\n      return;\n    }\n    // if end > max, return\n    let rowData2 = this.state.rowData;\n    if (rowData2 === undefined) {\n      return;\n    }\n    if (row2 >= rowData2.length || colIdx2 > Object.keys(rowData2[0]).length - 1) {\n      // console.log(\"<TableViewer> had invalid input in updateStyleByRegion().\");\n      return;\n    }\n    // change style of every cell in region\n    for (let row = row1; row <= row2; row++) {\n      if (rowData2[row][\"styles\"] === undefined) {\n        rowData2[row][\"styles\"] = {};\n      }\n      for (let colIdx = colIdx1; colIdx <= colIdx2; colIdx++) {\n        let col = colIdx2colName(colIdx);\n        if (override) {\n          rowData2[row][\"styles\"][col] = style;\n        } else {\n          rowData2[row][\"styles\"][col] = Object.assign({}, rowData2[row][\"styles\"][col], style); // combine old and new styles\n        }\n      }\n    }\n    this.setState({\n      rowData: rowData2\n    });\n    this.gridApi.setRowData(rowData2);\n    // console.log(\"<TableViewer> updated style of (\" + colName1 + rowName1 + \":\" + colName2 + rowName2 + \") by \" + JSON.stringify(style) + \".\");\n  }\n\n  updateStyleByDict(dict, presets, override = false) {\n    // dict = { \"styleName\": [\"A1\", \"A2\", ...] }\n    // window.TableViewer.updateStyleByDict({ \"data_region\": [\"A14\", \"A15\"], \"qualifier_region\": [\"B14\", \"B15\"], \"item\": [\"C14\", \"C15\"] });\n    let rowData2 = this.state.rowData;\n    if (!rowData2) return;\n    let styleNames = Object.keys(dict), styleNameCount = styleNames.length;\n    for (let i = 0; i < styleNameCount; i++) {\n      let styleName = styleNames[i];\n      let cells = dict[styleName], cellCount = cells.length;\n      for (let j = 0; j < cellCount; j++) {\n        let [col, row] = cells[j].match(/[a-z]+|[^a-z]+/gi);\n        row--;\n        if (rowData2[row] === undefined) continue;\n        if (rowData2[row][col] === undefined) continue;\n        if (rowData2[row][\"styles\"] === undefined) { rowData2[row][\"styles\"] = {}; }\n        if (override) {\n          rowData2[row][\"styles\"][col] = presets[styleName];\n        } else {\n          rowData2[row][\"styles\"][col] = Object.assign({}, rowData2[row][\"styles\"][col], presets[styleName]); // combine old and new styles\n        }\n      }\n    }\n    this.setState({\n      rowData: rowData2\n    });\n    this.gridApi.setRowData(rowData2);\n    // console.log(\"<TableViewer> updated style by a dict.\");\n  }\n\n  applyHighlightJSON(dict) {\n    const presets = {\n      \"data_region\": { \"backgroundColor\": \"hsl(150, 50%, 90%)\" },\n      \"qualifier_region\": { \"backgroundColor\": \"hsl(0, 50%, 90%)\" },\n      \"item\": { \"backgroundColor\": \"hsl(200, 50%, 90%)\" }\n    }\n    this.updateStyleByDict(dict, presets);\n    this.setState({ highlightJSON: dict });\n  }\n\n  removeHighlightJSON() {\n    const dict = this.state.highlightJSON;\n    if (dict === undefined || dict === null) return;\n    const presets = {\n      \"data_region\": { \"backgroundColor\": \"\" },\n      \"qualifier_region\": { \"backgroundColor\": \"\" },\n      \"item\": { \"backgroundColor\": \"\" }\n    }\n    this.updateStyleByDict(dict, presets);\n    this.setState({ highlightJSON: null });\n  }\n}\n\n// YYYYYYY       YYYYYYY           AAA               MMMMMMMM               MMMMMMMMLLLLLLLLLLL             \n// Y:::::Y       Y:::::Y          A:::A              M:::::::M             M:::::::ML:::::::::L             \n// Y:::::Y       Y:::::Y         A:::::A             M::::::::M           M::::::::ML:::::::::L             \n// Y::::::Y     Y::::::Y        A:::::::A            M:::::::::M         M:::::::::MLL:::::::LL             \n// YYY:::::Y   Y:::::YYY       A:::::::::A           M::::::::::M       M::::::::::M  L:::::L               \n//    Y:::::Y Y:::::Y         A:::::A:::::A          M:::::::::::M     M:::::::::::M  L:::::L               \n//     Y:::::Y:::::Y         A:::::A A:::::A         M:::::::M::::M   M::::M:::::::M  L:::::L               \n//      Y:::::::::Y         A:::::A   A:::::A        M::::::M M::::M M::::M M::::::M  L:::::L               \n//       Y:::::::Y         A:::::A     A:::::A       M::::::M  M::::M::::M  M::::::M  L:::::L               \n//        Y:::::Y         A:::::AAAAAAAAA:::::A      M::::::M   M:::::::M   M::::::M  L:::::L               \n//        Y:::::Y        A:::::::::::::::::::::A     M::::::M    M:::::M    M::::::M  L:::::L               \n//        Y:::::Y       A:::::AAAAAAAAAAAAA:::::A    M::::::M     MMMMM     M::::::M  L:::::L         LLLLLL\n//        Y:::::Y      A:::::A             A:::::A   M::::::M               M::::::MLL:::::::LLLLLLLLL:::::L\n//     YYYY:::::YYYY  A:::::A               A:::::A  M::::::M               M::::::ML::::::::::::::::::::::L\n//     Y:::::::::::Y A:::::A                 A:::::A M::::::M               M::::::ML::::::::::::::::::::::L\n//     YYYYYYYYYYYYYAAAAAAA                   AAAAAAAMMMMMMMM               MMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLL\n\nclass YAMLEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    // window.YAMLEditor = this;\n    this.state = {\n      textYAML: \"# type your YAML code here...\",\n      jsonYAML: null,\n      isValidYAML: true,\n      errMsg: \"\",\n      errStack: \"\",\n      highlightJSON: null\n    };\n    this.handleOpenFile = this.handleOpenFile.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleApply = this.handleApply.bind(this);\n  }\n\n  handleOpenFile(event) {\n    const file = event.target.files[0];\n    if (!file) return;\n    console.log(\"<YAMLEditor> opened file: \" + file.name);\n\n    // upload local yaml\n    let reader = new FileReader();\n    reader.readAsText(file);\n    reader.onloadend = (() => {\n      let textYAML = reader.result;\n      this.setState({ textYAML: textYAML });\n      try {\n        let jsonYAML = yaml.safeLoad(textYAML);\n        // console.log(jsonYAML);\n        this.setState({\n          jsonYAML: jsonYAML,\n          isValidYAML: true,\n          errMsg: null,\n          errStack: null\n        });\n      } catch (err) {\n        // console.log(err);\n        this.setState({\n          isValidYAML: false,\n          errMsg: \"⚠️ \" + err.message.match(/[^:]*(?=:)/)[0],\n          errStack: err.stack\n        });\n      }\n    });\n  }\n\n  handleChange(event) {\n    // console.log(\"<YAMLEditor> was changed.\");\n    const textYAML = this.refs.monaco.editor.getModel().getValue();\n    this.setState({ textYAML: textYAML });\n    try {\n      let jsonYAML = yaml.safeLoad(textYAML);\n      // console.log(jsonYAML);\n      this.setState({\n        jsonYAML: jsonYAML,\n        isValidYAML: true,\n        errMsg: null,\n        errStack: null\n      });\n    } catch (err) {\n      // console.log(err);\n      this.setState({\n        isValidYAML: false,\n        errMsg: \"⚠️ \" + err.message.match(/[^:]*(?=:)/)[0],\n        errStack: err.stack\n      });\n    }\n  }\n\n  handleApply(event) {\n    console.log(\"<YAMLEditor> clicked apply\");\n\n    // clear previous result\n    window.TableViewer.removeHighlightJSON();\n    window.Output.removeBorders();\n    window.Output.clearOutput();\n\n    // fetch remote json for highlight\n    let uploadYamlURL = window.server + \"upload_yaml?id=\" + window.userID;\n    const sheetName = window.TableViewer.state.currSheetName;\n    if (sheetName !== null) uploadYamlURL += \"&sheet_name=\" + sheetName;\n\n    let formData = new FormData();\n    formData.append(\"yaml\", this.state.textYAML);\n\n    fetch(uploadYamlURL, {\n      body: formData,\n      credentials: \"same-origin\",\n      // credentials: \"include\",\n      method: \"POST\"\n    }).then((response) => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    }).then((response) => {\n      return response.json();\n    }).then((json) => {\n      console.log(\"<YAMLEditor> fetched remote file: %cupload_yaml.json\", \"background: yellow\");\n      console.log(json);\n      window.TableViewer.applyHighlightJSON(json);\n      window.Output.setState({ downloadDisabled: false });\n    }).catch((error) => {\n      alert(\"Failed to apply. 🙁\");\n    });\n  }\n\n  render() {\n    const textYAML = this.state.textYAML;\n    return (\n      <div className=\"w-100 h-100 p-1\">\n        <Card className=\"w-100 h-100 shadow-sm\">\n\n          {/* Title of YAML-Editor */}\n          <Card.Header style={{ height: \"40px\", padding: \"0.5rem 1rem\", background: \"#006699\" }}>\n            <div\n              className=\"text-white font-weight-bold d-inline-block text-truncate\"\n              style={{ width: \"calc(100% - 60px)\" }}\n            >YAML&nbsp;Editor</div>\n            <OverlayTrigger\n              placement=\"bottom\"\n              trigger=\"hover\"\n              // defaultShow=\"true\"\n              overlay={\n                <Tooltip id=\"tooltip-open-yaml\">\n                  <div className=\"text-left small\">\n                    <b>Accepted file types:</b>\n                    <br />• YAML Ain't Markup Language (.yaml)\n                      </div>\n                </Tooltip>\n              }\n            >\n              <Button\n                className=\"d-inline-block float-right\"\n                variant=\"outline-light\"\n                size=\"sm\"\n                style={{ padding: \"0rem 0.5rem\" }}\n                onClick={function () {\n                  // Call the hidden file input tag\n                  document.getElementById(\"file_yaml\").click();\n                }}\n              >Open</Button>\n            </OverlayTrigger>\n            <input\n              type=\"file\"\n              id=\"file_yaml\"\n              accept=\".yaml\"\n              style={{ display: \"none\" }}\n              onChange={this.handleOpenFile}\n              onClick={(event) => { event.target.value = null }}\n            />\n          </Card.Header>\n\n          {/* Content of YAML-Editor */}\n          <Card.Body className=\"w-100 h-100 p-0\" id=\"YAML-Editor\" style={{ overflow: \"scroll\" }}>\n            <MonacoEditor\n              ref=\"monaco\"\n              width=\"100%\"\n              height=\"100%\"\n              language=\"yaml\"\n              theme=\"vs\"\n              value={textYAML}\n              options={{\n                // All options for construction of monaco editor:\n                // https://microsoft.github.io/monaco-editor/api/interfaces/monaco.editor.ieditorconstructionoptions.html\n                automaticLayout: true,\n                lineNumbersMinChars: 4,\n                // minimap: { enabled: false, },\n                // mouseWheelZoom: true,\n                renderLineHighlight: \"all\", // \"none\" | \"gutter\" | \"line\" | \"all\"\n                renderWhitespace: \"all\", // \"none\" | \"boundary\" | \"all\"\n                scrollbar: {\n                  horizontalScrollbarSize: 10,\n                  horizontalSliderSize: 6,\n                  verticalScrollbarSize: 10,\n                  verticalSliderSize: 6\n                },\n                showFoldingControls: 'always',\n              }}\n              onChange={this.handleChange}\n              editorDidMount={(editor, monaco) => {\n                editor.getModel().updateOptions({ tabSize: 2 });\n              }}\n            />\n          </Card.Body>\n\n          {/* apply buttom */}\n          <Card.Footer style={{ height: \"40px\", padding: \"0.5rem 1rem\", background: \"whitesmoke\" }}>\n            <div\n              className=\"d-inline-block text-truncate\"\n              style={{\n                // fontFamily: \"Menlo, Monaco, \\\"Courier New\\\", monospace\",\n                fontSize: \"14px\",\n                color: \"#990000\",\n                width: \"calc(100% - 60px)\",\n                cursor: \"help\"\n              }}\n              title={this.state.errStack}\n            >{this.state.errMsg}</div>\n            <Button\n              className=\"d-inline-block float-right\"\n              size=\"sm\"\n              style={{ borderColor: \"#006699\", background: \"#006699\", padding: \"0rem 0.5rem\" }}\n              onClick={this.handleApply.bind(this)}\n              disabled={!this.state.isValidYAML}\n            >Apply</Button>\n          </Card.Footer>\n        </Card>\n      </div>\n    );\n  }\n}\n\n//      OOOOOOOOO                              tttt                                                      tttt          \n//    OO:::::::::OO                         ttt:::t                                                   ttt:::t          \n//  OO:::::::::::::OO                       t:::::t                                                   t:::::t          \n// O:::::::OOO:::::::O                      t:::::t                                                   t:::::t          \n// O::::::O   O::::::Ouuuuuu    uuuuuuttttttt:::::ttttttt   ppppp   ppppppppp   uuuuuu    uuuuuuttttttt:::::ttttttt    \n// O:::::O     O:::::Ou::::u    u::::ut:::::::::::::::::t   p::::ppp:::::::::p  u::::u    u::::ut:::::::::::::::::t    \n// O:::::O     O:::::Ou::::u    u::::ut:::::::::::::::::t   p:::::::::::::::::p u::::u    u::::ut:::::::::::::::::t    \n// O:::::O     O:::::Ou::::u    u::::utttttt:::::::tttttt   pp::::::ppppp::::::pu::::u    u::::utttttt:::::::tttttt    \n// O:::::O     O:::::Ou::::u    u::::u      t:::::t          p:::::p     p:::::pu::::u    u::::u      t:::::t          \n// O:::::O     O:::::Ou::::u    u::::u      t:::::t          p:::::p     p:::::pu::::u    u::::u      t:::::t          \n// O:::::O     O:::::Ou::::u    u::::u      t:::::t          p:::::p     p:::::pu::::u    u::::u      t:::::t          \n// O::::::O   O::::::Ou:::::uuuu:::::u      t:::::t    ttttttp:::::p    p::::::pu:::::uuuu:::::u      t:::::t    tttttt\n// O:::::::OOO:::::::Ou:::::::::::::::uu    t::::::tttt:::::tp:::::ppppp:::::::pu:::::::::::::::uu    t::::::tttt:::::t\n//  OO:::::::::::::OO  u:::::::::::::::u    tt::::::::::::::tp::::::::::::::::p  u:::::::::::::::u    tt::::::::::::::t\n//    OO:::::::::OO     uu::::::::uu:::u      tt:::::::::::ttp::::::::::::::pp    uu::::::::uu:::u      tt:::::::::::tt\n//      OOOOOOOOO         uuuuuuuu  uuuu        ttttttttttt  p::::::pppppppp        uuuuuuuu  uuuu        ttttttttttt  \n//                                                           p:::::p                                                   \n//                                                           p:::::p                                                   \n//                                                          p:::::::p                                                  \n//                                                          p:::::::p                                                  \n//                                                          p:::::::p                                                  \n//                                                          ppppppppp                                                  \n\nclass Output extends React.Component {\n  constructor(props) {\n    super(props);\n    window.Output = this;\n    this.state = {\n      valueCol: null,\n      valueRow: null,\n      // itemID: itemID,\n      // itemName: itemName,\n      // itemCol: itemCol,\n      // itemRow: itemRow,\n      // propertyID: propertyName,\n      // value: value,\n      // qualifiers: qualifiers,\n      cache: {}, // cache for Wikidata queries\n      showDownload: false,\n      downloadDisabled: true,\n      downloadFileName: window.userID,\n      downloadFileType: \"json\",\n    };\n  }\n\n  removeBorders() {\n    // remove current cell border\n    let col = this.state.currCol;\n    let row = this.state.currRow;\n    if (col !== undefined && row !== undefined) {\n      window.TableViewer.updateStyleByCell(col, row, { \"border\": \"\" });\n    }\n\n    // remove item border\n    col = this.state.itemCol;\n    row = this.state.itemRow;\n    if (col !== undefined && row !== undefined) {\n      window.TableViewer.updateStyleByCell(col, row, { \"border\": \"\" });\n    }\n\n    // remove qualifiers borders\n    let qualifiers = this.state.qualifiers;\n    if (qualifiers !== undefined && qualifiers != null) {\n      for (let i = 0, len = qualifiers.length; i < len; i++) {\n        col = qualifiers[i][\"col\"];\n        row = qualifiers[i][\"row\"];\n        window.TableViewer.updateStyleByCell(col, row, { \"border\": \"\" });\n      }\n    }\n  }\n\n  clearOutput() {\n    this.setState({\n      valueCol: null,\n      valueRow: null,\n      itemID: null,\n      itemName: null,\n      itemCol: null,\n      itemRow: null,\n      propertyID: null,\n      value: null,\n      qualifiers: null,\n    });\n  }\n\n  getHueByRandom(total) {\n    // hue in [0, 359]\n    const division = Math.floor(360 / total);\n    return Math.floor(Math.random() * total) * division;\n  }\n\n  getHueByString(total, str) {\n    // hue in [0, 359]\n    const i = parseInt(str.substring(1)) % total;\n    const division = Math.floor(360 / total);\n    return i * division;\n  }\n\n  json2state(colName, rowName, json) {\n    // remove previous borders\n    this.removeBorders();\n\n    if (json[\"statement\"] === undefined) {\n      this.clearOutput();\n      return;\n    }\n\n    // retrieve cache\n    let cache = this.state.cache;\n\n    // item\n    const itemID = json[\"statement\"][\"item\"];\n    // const itemName = window.TableViewer.state.rowData[row][col];\n    if (cache[itemID] === undefined) {\n      this.setState({ itemID: itemID });\n      this.queryWikidata(itemID, \"itemName\");\n    } else {\n      this.setState({ itemID: itemID, itemName: cache[itemID] });\n    }\n    let [col, row] = json[\"statement\"][\"item_cell_index\"].match(/[a-z]+|[^a-z]+/gi);\n    window.TableViewer.updateStyleByCell(col, row, { \"border\": \"1px solid black\" });\n    this.setState({ itemCol: col, itemRow: row });\n\n    // property\n    const propertyID = json[\"statement\"][\"property\"];\n    if (cache[propertyID] === undefined) {\n      this.setState({ propertyID: propertyID });\n      this.queryWikidata(propertyID, \"propertyName\");\n    } else {\n      this.setState({ propertyID: propertyID, propertyName: cache[propertyID] });\n    }\n\n    // value\n    const value = json[\"statement\"][\"value\"];\n    this.setState({ value: value });\n    window.TableViewer.updateStyleByCell(colName, rowName, { \"border\": \"1px solid hsl(150, 50%, 40%)\" });\n    this.setState({ currCol: colName, currRow: rowName });\n\n    // qualifiers\n    let temp = json[\"statement\"][\"qualifier\"];\n    let qualifiers = [];\n    for (let i = 0, len = temp.length; i < len; i++) {\n      let qualifier = {};\n\n      qualifier[\"propertyID\"] = temp[i][\"property\"];\n      if (cache[qualifier[\"propertyID\"]] === undefined) {\n        this.queryWikidata(qualifier[\"propertyID\"], \"qualifiers\", i, \"propertyName\");\n      } else {\n        qualifier[\"propertyName\"] = cache[qualifier[\"propertyID\"]];\n      }\n\n      qualifier[\"valueName\"] = temp[i][\"value\"];\n      if (/^[PQ]\\d+$/.test(qualifier[\"valueName\"])) {\n        if (cache[qualifier[\"valueName\"]] === undefined) {\n          this.queryWikidata(qualifier[\"valueName\"], \"qualifiers\", i, \"valueName\");\n        } else {\n          qualifier[\"valueID\"] = qualifier[\"valueName\"];\n          qualifier[\"valueName\"] = cache[qualifier[\"valueName\"]];\n        }\n      }\n\n      [col, row] = temp[i][\"cell_index\"].match(/[a-z]+|[^a-z]+/gi);\n      qualifier[\"col\"] = col;\n      qualifier[\"row\"] = row;\n      // let hue = this.getHueByRandom(10); // first param is the total number of colors\n      let hue = this.getHueByString(10, qualifier[\"propertyID\"]);\n      window.TableViewer.updateStyleByCell(col, row, { \"border\": \"1px solid hsl(\" + hue + \", 100%, 40%)\" });\n\n      qualifiers.push(qualifier);\n    }\n    this.setState({ qualifiers: qualifiers });\n  }\n\n  queryWikidata(node, field, index = 0, subfield = \"propertyName\") {\n    // TODO: use <local stroage> to store previous query result even longer\n    const api = \"https://query.wikidata.org/sparql?format=json&query=SELECT%20DISTINCT%20%2a%20WHERE%20%7B%0A%20%20wd%3A\" + node + \"%20rdfs%3Alabel%20%3Flabel%20.%20%0A%20%20FILTER%20%28langMatches%28%20lang%28%3Flabel%29%2C%20%22EN%22%20%29%20%29%20%20%0A%7D%0ALIMIT%201\";\n    // console.log(\"<Output> made query to Wikidata: \" + api);\n    fetch(api)\n      .then(response => response.json())\n      .then(json => {\n        try {\n          const name = json[\"results\"][\"bindings\"][0][\"label\"][\"value\"];\n          if (field === \"itemName\") {\n            this.setState({ itemName: name });\n          } else if (field === \"propertyName\") {\n            this.setState({ propertyName: name });\n          } else if (field === \"qualifiers\") {\n            let qualifiers = this.state.qualifiers;\n            if (subfield === \"propertyName\") {\n              qualifiers[index][\"propertyName\"] = name;\n            } else if (subfield === \"valueName\") {\n              qualifiers[index][\"valueID\"] = qualifiers[index][\"valueName\"];\n              qualifiers[index][\"valueName\"] = name;\n            }\n            this.setState({ qualifiers: qualifiers });\n          }\n          let cache = this.state.cache;\n          cache[node] = name;\n          this.setState({ cache: cache });\n        } catch (error) {\n          // console.log(error)\n        }\n      });\n  }\n\n  render() {\n    let outputDiv = [];\n    let itemName = this.state.itemName;\n    if (itemName) {\n\n      // item\n      let itemID = this.state.itemID;\n      let itemIDDiv = (\n        <a\n          href={\"https://www.wikidata.org/wiki/\" + itemID}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ \"color\": \"hsl(200, 100%, 30%)\" }}\n        >{itemID}</a>\n      );\n\n      // property\n      let propertyDiv;\n      let propertyID = this.state.propertyID;\n      let propertyName = this.state.propertyName;\n      if (propertyName) {\n        propertyDiv =\n          <span key=\"property\">\n            <a\n              href={\"https://www.wikidata.org/wiki/Property:\" + propertyID}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ \"color\": \"hsl(200, 100%, 30%)\" }}\n            >{propertyName}</a>\n          </span>\n          ;\n      } else {\n        propertyDiv =\n          <span key=\"property\">\n            <a\n              href={\"https://www.wikidata.org/wiki/Property:\" + propertyID}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ \"color\": \"hsl(200, 100%, 30%)\" }}\n            >{propertyID}</a>\n          </span>\n          ;\n      }\n\n      // value\n      let valueDiv = this.state.value;\n\n      // qualifiers\n      let qualifiersDiv = [];\n      let qualifiers = this.state.qualifiers;\n      if (qualifiers) {\n        for (let i = 0, len = qualifiers.length; i < len; i++) {\n          let qualifier = qualifiers[i];\n\n          // qualifier property\n          let qualifierPropertyDiv;\n          let qualifierPropertyID = qualifier[\"propertyID\"];\n          let qualifierPropertyName = qualifier[\"propertyName\"];\n          if (qualifierPropertyName) {\n            qualifierPropertyDiv =\n              <a\n                href={\"https://www.wikidata.org/wiki/Property:\" + qualifierPropertyID}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ \"color\": \"hsl(200, 100%, 30%)\" }}\n                key=\"qualifierProperty\"\n              >{qualifierPropertyName}</a>\n              ;\n          } else {\n            qualifierPropertyDiv =\n              <a\n                href={\"https://www.wikidata.org/wiki/Property:\" + qualifierPropertyID}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ \"color\": \"hsl(200, 100%, 30%)\" }}\n                key=\"qualifierProperty\"\n              >{qualifierPropertyID}</a>\n              ;\n          }\n\n          // qualifier value\n          let qualifierValueDiv;\n          let qualifierValueID = qualifier[\"valueID\"];\n          let qualifierValueName = qualifier[\"valueName\"];\n          if (qualifierValueID) {\n            qualifierValueDiv =\n              <a\n                href={\"https://www.wikidata.org/wiki/\" + qualifierValueID}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ \"color\": \"hsl(200, 100%, 30%)\" }}\n                key=\"qualifierValue\"\n              >{qualifierValueName}</a>\n              ;\n          } else {\n            qualifierValueDiv = qualifierValueName;\n          }\n\n          // append to qualifiersDiv\n          qualifiersDiv.push(\n            <div key={i}>- {qualifierPropertyDiv}: {qualifierValueDiv}</div>\n          );\n        }\n      }\n\n      // final output\n      outputDiv.push(\n        <Card.Title key=\"item\">\n          <span style={{ fontSize: \"24px\", fontWeight: \"bolder\" }}>\n            {itemName}\n          </span>\n          &nbsp;\n          <span style={{ fontSize: \"20px\" }}>\n            ({itemIDDiv})\n          </span>\n        </Card.Title>\n      );\n      outputDiv.push(\n        <table className=\"w-100\" key=\"outputTable\" style={{ borderCollapse: \"collapse\" }}>\n          <tbody>\n            <tr style={{ borderTop: \"1px solid lightgray\", borderBottom: \"1px solid lightgray\" }}>\n              <td className=\"p-2\" style={{ fontSize: \"16px\", fontWeight: \"bold\", verticalAlign: \"top\", width: \"40%\" }}>\n                {propertyDiv}\n              </td>\n              <td className=\"p-2\">\n                <div style={{ fontSize: \"16px\", fontWeight: \"bold\" }}>\n                  {valueDiv}\n                </div>\n                <div style={{ fontSize: \"14px\" }}>\n                  {qualifiersDiv}\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      );\n    }\n\n    return (\n      <>\n        <div className=\"w-100 h-100 p-1\">\n          <Card className=\"w-100 h-100 shadow-sm\">\n\n            {/* Title of Output */}\n            <Card.Header style={{ height: \"40px\", padding: \"0.5rem 1rem\", background: \"#990000\" }}>\n              <div\n                className=\"text-white font-weight-bold d-inline-block text-truncate\"\n                style={{ width: \"calc(100% - 90px)\" }}\n              >Output&nbsp;{this.state.valueCol ? \"[$col:\" + this.state.valueCol + \",$row:\" + this.state.valueRow + \"]\" : \"\"}</div>\n              <Button\n                className=\"d-inline-block float-right\"\n                variant=\"outline-light\"\n                size=\"sm\"\n                style={{ padding: \"0rem 0.5rem\" }}\n                onClick={this.handleShowDownload.bind(this)}\n                disabled={this.state.downloadDisabled}\n              >Download</Button>\n            </Card.Header>\n\n            {/* Content of Output */}\n            <Card.Body className=\"p-3\" id=\"Output\" style={{ width: \"100%\", height: \"1px\", overflow: \"scroll\" }}>\n              {outputDiv}\n            </Card.Body>\n          </Card>\n        </div>\n\n        <Modal show={this.state.showDownload} onHide={() => { }}>\n          <Modal.Header style={{ background: \"whitesmoke\" }}>\n            <Modal.Title>Download</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form className=\"container\">\n              <Form.Group as={Row} style={{ marginTop: \"1rem\" }}>\n                <Col md=\"9\" className=\"pr-0\">\n                  <Form.Control\n                    type=\"text\"\n                    defaultValue={this.state.downloadFileName}\n                    onChange={(event) => this.setState({ downloadFileName: event.target.value })}\n                  />\n                </Col>\n                <Col md=\"3\" className=\"pl-0\">\n                  <Form.Control as=\"select\" onChange={(event) => this.setState({ downloadFileType: event.target.value })}>\n                    <option value=\"json\">.json</option>\n                    <option value=\"ttl\">.ttl</option>\n                  </Form.Control>\n                </Col>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer style={{ background: \"whitesmoke\" }}>\n            <Button variant=\"outline-dark\" onClick={this.handleCloseDownload.bind(this)}>\n              Cancel\n            </Button>\n            <OverlayTrigger\n              placement=\"bottom\"\n              trigger=\"hover\"\n              // defaultShow=\"true\"\n              overlay={\n                <Tooltip>\n                  <div className=\"text-left small\">\n                    Your file will be prepared shortly. Once the file is ready, it will be downloaded automatically.\n                  </div>\n                </Tooltip>\n              }\n            >\n              <Button variant=\"dark\" onClick={this.handleStartDownload.bind(this)}>\n                Start\n              </Button>\n            </OverlayTrigger>\n\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n\n  handleShowDownload() {\n    this.setState({ showDownload: true });\n  }\n\n  handleCloseDownload() {\n    this.setState({ showDownload: false });\n  }\n\n  handleStartDownload(event) {\n    const filename = this.state.downloadFileName + \".\" + this.state.downloadFileType;\n    console.log(\"<Output> sent download request for: %c\" + filename, \"background: yellow\");\n\n    const downloadAPI = window.server + \"download?id=\" + window.userID + \"&type=\" + this.state.downloadFileType;\n    fetch(downloadAPI, {\n      credentials: \"same-origin\",\n      // credentials: \"include\",\n      method: \"POST\"\n    }).then((response) => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      return response;\n    }).then((response) => {\n      return response.text();\n    }).then((text) => {\n      console.log(\"<Output> fetched requested file, download will start soon\");\n      // console.log(text);\n      Downloader(text, filename);\n    }).catch((error) => {\n      // console.log(error);\n    });\n\n    this.setState({ showDownload: false });\n  }\n}\n\n// UUUUUUUU     UUUUUUUU        tttt            iiii  lllllll                  \n// U::::::U     U::::::U     ttt:::t           i::::i l:::::l                  \n// U::::::U     U::::::U     t:::::t            iiii  l:::::l                  \n// UU:::::U     U:::::UU     t:::::t                  l:::::l                  \n//  U:::::U     U:::::Uttttttt:::::ttttttt    iiiiiii  l::::l     ssssssssss   \n//  U:::::D     D:::::Ut:::::::::::::::::t    i:::::i  l::::l   ss::::::::::s  \n//  U:::::D     D:::::Ut:::::::::::::::::t     i::::i  l::::l ss:::::::::::::s \n//  U:::::D     D:::::Utttttt:::::::tttttt     i::::i  l::::l s::::::ssss:::::s\n//  U:::::D     D:::::U      t:::::t           i::::i  l::::l  s:::::s  ssssss \n//  U:::::D     D:::::U      t:::::t           i::::i  l::::l    s::::::s      \n//  U:::::D     D:::::U      t:::::t           i::::i  l::::l       s::::::s   \n//  U::::::U   U::::::U      t:::::t    tttttt i::::i  l::::l ssssss   s:::::s \n//  U:::::::UUU:::::::U      t::::::tttt:::::ti::::::il::::::ls:::::ssss::::::s\n//   UU:::::::::::::UU       tt::::::::::::::ti::::::il::::::ls::::::::::::::s \n//     UU:::::::::UU           tt:::::::::::tti::::::il::::::l s:::::::::::ss  \n//       UUUUUUUUU               ttttttttttt  iiiiiiiillllllll  sssssssssss\n\nfunction colName2colIdx(colName) {\n  const chrs = ' ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let colIdx = 0;\n  for (let i = 0; i < colName.length; i++) {\n    colIdx = colIdx * 26 + chrs.indexOf(colName[i]);\n  }\n  return colIdx;\n}\n\nfunction colIdx2colName(colIdx) {\n  let dividend = Math.floor(Math.abs(colIdx)), rest, colName = '';\n  while (dividend > 0) {\n    rest = (dividend - 1) % 26;\n    colName = String.fromCharCode(65 + rest) + colName;\n    dividend = parseInt((dividend - rest) / 26);\n  }\n  return colName;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}